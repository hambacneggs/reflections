What happens when you initialize a repository? Why do you need to do it?

  It creates the .git directory with all files need to start version control
  tracking. Now you can start committing changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area is tagging files to be included in the commit. The working
  directory holds all of the files in the project (the files in the staging area
  and the ones that are uncommitted).

How can you use the staging area to make sure you have one commit per logical
change?

  Check with git status before committing the change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  It would be helpful when trying out some new code that you're not sure would
  work without messing up the current code.

How do the diagrams help you visualize the branch structure?

  It helpful to see why commits are only visible on one branch and not another

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  All of the commits from the merged branch are combined with the checked-out
  branch. A new commit is created with the merged changes. The diagram helps
  to visualize what happens when you merge.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

  Always doing merging manually is very time consuming. Automatic merging will
  merge everything it can and point out conflict, which will reduce the
  amount of code that will need to be manually merged. The only con is that
  it is a bit complicated.
